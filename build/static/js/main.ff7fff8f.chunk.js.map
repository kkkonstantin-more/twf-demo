{"version":3,"sources":["components/game-editor/game-editor.jsx","utils/utils.js","utils/kotlin-lib-functions.js","pages/main-page.utils.js","assets/math-symbols/sum.svg","assets/math-symbols/square-root.svg","assets/math-symbols/pi.svg","pages/main-page.jsx","App.js","reportWebVitals.js","index.js"],"names":["GameEditor","start","end","rulePacks","cleanDocument","document","getElementsByTagName","forEach","svg","ariaHidden","parentNode","removeChild","useEffect","gameHeight","window","innerHeight","parseFloat","getComputedStyle","querySelector","height","slice","paddingFromTopButtonsLine","innerWidth","centralExpressionSize","substitutionAreaPadding","substitutionAreaX","substitutionAreaY","substitutionAreaWidth","substitutionAreaHeight","substitutionSize","explanationsSize","substitutionAreaInternalPadding","substitutionPaddingBetweenParts","winLabelAreaY","winLabelTextSize","winLabelHeight","winLabelWidth","backgroundColour","defaultRulesBack","selectedRuleBack","winTextColor","winLabelColor","width_inner_cont","originalExpression","endExpression","rules","compiledConfiguration","createConfigurationFromRulePacksAndParams","app","SVG","addTo","size","StartLevel","init","PrintSubstitutions","viewbox","rect","fill","NewTreeRoot","structureStringToExpression","expr","PrintTree","center","width","scale","currentExpression","shift","y","radius","text","font","family","CheckAndHandleWin","test","HTMLElement","safari","pushNotification","toString","listOfValues","arrSubs","extensionBorderPadding","move","rulesContainer","group","heighContOfConts","i","length","tmpCont","draw","add","interactive_button_1","curCont","actualShiftX","lolkek","PlainPrintTree","x","tmpWidth","realWidth","scaleCoef","realHeight","onButtonDownButton1","con","index","animate","children","item","resultExpression","onButtonOverButton1","onButtonOutButton1","cont","f","tmp","css","on","id","twf_js","stringToExpression","texToExpression","expressionToTexString","expressionToStructureString","expressionToString","MathInputConvertingError","message","name","Error","convertMathInput","from","to","expression","expressionInLibFormat","replace","nodeType","name$","value","decodeUrlSymbols","string","plainSignToUrlSign","plainSign","addStyles","alertCount","MainPage","urlSign","Option","Select","history","useHistory","Object","fromEntries","useLocation","search","split","map","queryStr","modeUrl","mode","originalExpressionUrl","endExpressionUrl","rulePackUrl","rulePack","hideDetailsUrl","hideDetails","comparisonTypeUrl","comparisonType","useState","undefined","selectedComparisonSign","setSelectedComparisonSign","formSolutionStartingTex","solutionSignView","startTex","endTex","reverseGameMode","a","setCurrentMode","createDefaultAndDisabledClassName","className","checkExpressionUrl","expressionUrl","type","e","alert","defaultStart","defaultEnd","modes","startSS","setStartSS","endSS","setEndSS","includes","currentRulePack","setCurrentRulePack","correctSolution","setStartTex","setEndTex","currentMode","solutionInTex","setSolutionInTex","showSpinner","setShowSpinner","startError","setStartError","endError","setEndError","solutionError","setSolutionError","successMsg","setSuccessMsg","onCreateTask","isError","startSSConverted","endSSConverted","push","onCheckTexSolutionInput","res","fullExpression","comparisonSign","checkSolutionInTex","checkTex","errorMessage","validatedSolution","onCheckStatement","checkStatement","solutionMathField","setSolutionMathField","actions","iconUrl","sumIcon","latexCmd","cmd","squareIcon","piIcon","onClick","style","fontSize","latex","onChange","mathField","marginRight","showSearch","defaultValue","marginTop","sign","option","action","tooltip","title","placement","src","mathquillDidMount","minWidth","maxWidth","loading","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ff7fff8f.chunk.js","sourcesContent":["/* eslint-disable */\nimport React, { useEffect } from \"react\";\nimport { detectIsSafari } from \"../../utils/utils\";\n\nconst GameEditor = ({ start, end, rulePacks }) => {\n  const cleanDocument = () => {\n    document.getElementsByTagName(\"svg\").forEach((svg) => {\n      if (svg.ariaHidden !== \"true\") {\n        svg.parentNode.removeChild(svg);\n      }\n    });\n  };\n\n  useEffect(() => {\n    cleanDocument();\n    const gameHeight =\n      window.innerHeight -\n      parseFloat(\n        getComputedStyle(document.querySelector(\".app\")).height.slice(0, -2)\n      ) -\n      10;\n    const topButtonsLineHeight = 0;\n    const paddingFromTopButtonsLine =\n      window.innerWidth > 500 ? 50 : window.innerWidth / 10;\n    const centralExpressionSize =\n      window.innerWidth > 800 ? 80 : window.innerWidth / 10;\n\n    const substitutionAreaPadding =\n      window.innerWidth > 400 ? 40 : window.innerWidth / 10;\n    const substitutionAreaX = substitutionAreaPadding;\n    const substitutionAreaY =\n      topButtonsLineHeight +\n      paddingFromTopButtonsLine +\n      centralExpressionSize +\n      substitutionAreaPadding;\n    const substitutionAreaWidth =\n      window.innerWidth - 2 * substitutionAreaPadding;\n    const substitutionAreaHeight =\n      gameHeight -\n      (topButtonsLineHeight +\n        paddingFromTopButtonsLine +\n        centralExpressionSize * 1.5) -\n      2 * substitutionAreaPadding;\n    const substitutionSize =\n      window.innerWidth > 1000 ? 50 : window.innerWidth / 20;\n    const explanationsSize =\n      window.innerWidth > 900 ? 30 : window.innerWidth / 30;\n\n    const substitutionAreaInternalPadding = gameHeight / 100;\n    const substitutionPaddingBetweenParts = window.innerWidth / 100;\n\n    const winLabelAreaY = (gameHeight / 5) * 2; //topButtonsLineHeight + paddingFromTopButtonsLine + centralExpressionSize + substitutionAreaPadding / 2;\n    const winLabelTextSize =\n      window.innerWidth > 800 ? 40 : window.innerWidth / 20;\n    const winLabelHeight =\n      window.innerWidth > 800 ? 80 : window.innerWidth / 10;\n    const winLabelWidth = window.innerWidth - 4 * substitutionAreaPadding;\n\n    const backgroundColour = \"#ffffff\";\n    //        const backgroundColour = \"#efefef\";\n    const defaultTextColor = \"#009688\";\n    const defaultRulesBack = \"#cfd8dc\";\n    const highlightedRulesBack = \"#bfc8cc\";\n    const selectedRuleBack = \"#ffbf00\";\n    const winTextColor = \"#254b25\";\n    const winLabelColor = \"#59df5e\";\n\n    let height_inner_cont = substitutionAreaHeight / 4;\n    let width_inner_cont = substitutionAreaWidth;\n\n    const originalExpression = start ? start : \"(and(a;or(a;b)))\";\n    const endExpression = end ? end : \"(a)\";\n    const rules = rulePacks ? [rulePacks] : [\"Logic\"];\n\n    compiledConfiguration = window[\"twf_js\"].createConfigurationFromRulePacksAndParams(rules);\n\n    let app = new SVG().addTo(\"body\").size(window.innerWidth, gameHeight);\n\n    StartLevel(originalExpression);\n\n    function StartLevel(originalExpression) {\n      init(\n        compiledConfiguration,\n        originalExpression,\n        PrintSubstitutions,\n        false,\n        []\n      );\n      app.viewbox(0, 0, window.innerWidth, gameHeight);\n      app.rect(window.innerWidth, gameHeight).fill(backgroundColour);\n\n      let NewTreeRoot = window[\"twf_js\"].structureStringToExpression(\n        originalExpression\n      );\n      let expr = PrintTree(NewTreeRoot, centralExpressionSize, app);\n\n      expr.center(\n        window.innerWidth / 2,\n        topButtonsLineHeight +\n          paddingFromTopButtonsLine +\n          centralExpressionSize / 2\n      );\n      if (expr.width() >= window.innerWidth - paddingFromTopButtonsLine) {\n        expr.scale(\n          (window.innerWidth - paddingFromTopButtonsLine) / expr.width()\n        );\n      }\n\n      if (\n        expr.height() >=\n        centralExpressionSize + (paddingFromTopButtonsLine * 2) / 3\n      ) {\n        expr.scale(\n          (centralExpressionSize + (paddingFromTopButtonsLine * 2) / 3) /\n            expr.height()\n        );\n      }\n\n      if (\n        !CheckAndHandleWin(\n          originalExpression,\n          expr.height() - centralExpressionSize\n        )\n      ) {\n        app\n          .text(\"Click a part of the expression to transform it\")\n          .font({\n            size: explanationsSize,\n            family: \"u2000\",\n            fill: \"#000000\",\n          })\n          .center(window.innerWidth / 2, substitutionAreaY + explanationsSize);\n        app\n          .text(\n            `Use ${\n              detectIsSafari() ? \"\" : \"'Shift' or \"\n            }'CapsLock' to select more than one part`\n          )\n          .font({\n            size: explanationsSize,\n            family: \"u2000\",\n            fill: \"#000000\",\n          })\n          .center(\n            window.innerWidth / 2,\n            substitutionAreaY +\n              explanationsSize +\n              explanationsSize +\n              substitutionAreaInternalPadding\n          );\n      }\n    }\n\n    /**\n     * @return {boolean}\n     */\n    function CheckAndHandleWin(currentExpression, shift) {\n      let y = shift < 50 ? winLabelAreaY : (gameHeight / 5) * 2;\n      if (currentExpression === endExpression) {\n        //        if (window['twf_js'].compareWithoutSubstitutions(currentExpression, endExpression)) {\n        app\n          .rect(winLabelWidth, winLabelHeight)\n          .fill(winLabelColor)\n          .radius(10)\n          .center(window.innerWidth / 2, y);\n        app\n          .text(\"Congratulations! You win!\")\n          .font({\n            size: winLabelTextSize,\n            family: \"u2000\",\n            fill: winTextColor,\n          })\n          .center(window.innerWidth / 2, y);\n        return true;\n      } else {\n        app\n          .rect(winLabelWidth, winLabelHeight)\n          .fill(backgroundColour)\n          .radius(10)\n          .center(window.innerWidth / 2, y);\n        return false;\n      }\n    }\n\n    function PrintSubstitutions(listOfValues, arrSubs) {\n      let extensionBorderPadding = 20;\n      app\n        .rect(\n          substitutionAreaWidth + extensionBorderPadding * 2,\n          substitutionAreaHeight + extensionBorderPadding * 2\n        )\n        .move(substitutionAreaX, substitutionAreaY - extensionBorderPadding)\n        .fill(backgroundColour)\n        .radius(10);\n      let rulesContainer = app.group();\n      rulesContainer\n        .rect(\n          substitutionAreaWidth + extensionBorderPadding * 2,\n          substitutionAreaHeight + extensionBorderPadding * 2\n        )\n        .move(substitutionAreaX, substitutionAreaY - extensionBorderPadding)\n        .fill(backgroundColour)\n        .radius(10);\n\n      let heighContOfConts = substitutionAreaY;\n      for (let i = 0; i < listOfValues.length; ++i) {\n        let tmpCont = rulesContainer.group();\n\n        let draw = tmpCont.group();\n\n        tmpCont.add(interactive_button_1(draw, false, i));\n\n        let curCont = draw.group();\n\n        let actualShiftX = substitutionAreaInternalPadding + substitutionAreaX;\n        let lolkek = PlainPrintTree(\n          listOfValues[i][0],\n          substitutionSize,\n          curCont\n        )\n          .x(actualShiftX)\n          .y(heighContOfConts);\n        actualShiftX += substitutionPaddingBetweenParts;\n\n        let tmpWidth = curCont.width();\n\n        let arrowRight = curCont\n          .group()\n          .text(\"\\u27F6\")\n          .font({\n            size: substitutionSize,\n            family: \"u2000\",\n            fill: defaultTextColor,\n          })\n          .center(\n            actualShiftX + tmpWidth,\n            heighContOfConts + lolkek.height() / 2\n          )\n          .x(actualShiftX + tmpWidth);\n\n        actualShiftX += substitutionPaddingBetweenParts;\n        tmpWidth = curCont.width();\n\n        let abs = PlainPrintTree(listOfValues[i][1], substitutionSize, curCont)\n          .x(actualShiftX + tmpWidth)\n          .y(heighContOfConts);\n\n        lolkek.center(\n          lolkek.x() + lolkek.width() / 2,\n          heighContOfConts + lolkek.height() / 2\n        );\n        draw\n          .rect(width_inner_cont, curCont.height())\n          .radius(10)\n          .fill(defaultRulesBack)\n          .x(substitutionAreaX)\n          .y(heighContOfConts);\n\n        let realWidth = curCont.width() - substitutionAreaX;\n        if (realWidth >= width_inner_cont - 150) {\n          let scaleCoef = (width_inner_cont - 150) / realWidth;\n          curCont\n            .x(substitutionAreaX - (realWidth - (width_inner_cont - 150)) / 2)\n            .scale(scaleCoef);\n        }\n        draw.add(curCont);\n\n        heighContOfConts += curCont.height() + substitutionAreaInternalPadding;\n      }\n      let realHeight = heighContOfConts - substitutionAreaY;\n      if (realHeight > substitutionAreaHeight) {\n        let scaleCoef = substitutionAreaHeight / realHeight;\n        rulesContainer\n          .move(\n            substitutionAreaX,\n            substitutionAreaY - (realHeight - realHeight * scaleCoef) / 2\n          )\n          .scale(scaleCoef);\n      }\n\n      function addHandler(object, event, handler) {\n        if (object.addEventListener) {\n          object.addEventListener(event, handler, false, { passive: false });\n        } else if (object.attachEvent) {\n          object.attachEvent(\"on\" + event, handler, { passive: false });\n        } else alert(\"Обработчик не поддерживается\");\n      }\n\n      function onButtonDownButton1(con, f = false, index = -1) {\n        if (con.width() === width_inner_cont)\n          con.animate(300, \"<>\").fill(selectedRuleBack);\n        for (let item of con.children()) {\n          onButtonDownButton1(item);\n        }\n        if (index !== -1) {\n          let currentExpression = arrSubs[index].resultExpression.toString();\n          StartLevel(currentExpression);\n        }\n      }\n\n      function onButtonOverButton1(con) {\n        if (con.width() === width_inner_cont)\n          con.animate(300, \"<>\").fill(highlightedRulesBack);\n        for (let item of con.children()) {\n          onButtonOverButton1(item);\n        }\n      }\n\n      function onButtonOutButton1(con) {\n        if (con.width() === width_inner_cont)\n          con.animate(300, \"<>\").fill(defaultRulesBack);\n        for (let item of con.children()) {\n          onButtonOutButton1(item);\n        }\n      }\n\n      function interactive_button_1(cont, f = false, index = -1) {\n        let tmp = cont;\n        tmp.css(\"cursor\", \"pointer\");\n        tmp\n          .on(\"mousedown\", () => onButtonDownButton1(cont, f, index))\n          .on(\"mouseup mouseover\", () => onButtonOverButton1(cont))\n          .on(\"mouseout\", () => onButtonOutButton1(cont));\n        return tmp;\n      }\n    }\n\n    return () => cleanDocument();\n  }, [start, end]);\n\n  return <div id=\"Level\"></div>;\n};\n\nexport default GameEditor;\n","export const detectIsSafari = () => {\n  return (\n    /constructor/i.test(window.HTMLElement) ||\n    (function (p) {\n      return p.toString() === \"[object SafariRemoteNotification]\";\n    })(\n      !window[\"safari\"] ||\n        (typeof safari !== \"undefined\" && window[\"safari\"].pushNotification)\n    )\n  );\n};\n","const twf_js = window[\"twf_js\"];\n\n// LIB API FUNCTIONS\n// format -> expression\nexport const stringToExpression = twf_js.stringToExpression;\nconst structureStringToExpression = twf_js.structureStringToExpression;\nconst texToExpression = twf_js.stringToExpression;\n\n// expression -> format\nconst expressionToTexString = twf_js.expressionToTexString;\nconst expressionToStructureString = twf_js.expressionToStructureString;\nconst expressionToString = twf_js.expressionToString;\n\nclass MathInputConvertingError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"MathInputConvertingError\";\n  }\n}\n\nexport const convertMathInput = (from, to, expression) => {\n  const expressionInLibFormat = (() => {\n    if (from === \"PLAIN_TEXT\") {\n      return stringToExpression(expression);\n    } else if (from === \"STRUCTURE_STRING\") {\n      return structureStringToExpression(expression);\n    } else if (from === \"TEX\") {\n      // lib understands '//' as '/' in classic TEX\n      return texToExpression(expression.replace(/\\//g, \"//\"));\n    }\n  })();\n  if (expressionInLibFormat.nodeType.name$ === \"ERROR\") {\n    throw new MathInputConvertingError(expressionInLibFormat.value);\n  }\n  if (to === \"PLAIN_TEXT\") {\n    return expressionToString(expressionInLibFormat);\n  } else if (to === \"STRUCTURE_STRING\") {\n    return expressionToStructureString(expressionInLibFormat);\n  } else if (to === \"TEX\") {\n    return expressionToTexString(expressionInLibFormat);\n  }\n};\n\nexport const getErrorFromMathInput = (format, expression) => {\n  const expressionInLibFormat = (() => {\n    if (format === \"PLAIN_TEXT\") {\n      return stringToExpression(expression);\n    } else if (format === \"STRUCTURE_STRING\") {\n      return structureStringToExpression(expression);\n    } else if (format === \"TEX\") {\n      // lib understands '//' as '/' in classic TEX\n      return texToExpression(expression.replace(/\\//g, \"//\"));\n    }\n  })();\n  return expressionInLibFormat.nodeType.name$ === \"ERROR\"\n    ? expressionInLibFormat.value\n    : null;\n};\n\nexport const createConfigurationFromRulePacksAndDetailSolutionCheckingParams = (\n  rulePacks\n) => {\n  return twf_js.createConfigurationFromRulePacksAndDetailSolutionCheckingParams(\n    rulePacks,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined\n  );\n};\n\nexport const checkTexWithoutCompiledConfigurationCreating = (\n  fullExpression,\n  start,\n  end,\n  comparisonSign,\n  compiledConfiguration\n) => {\n  return twf_js.checkSolutionInTexWithCompiledConfiguration(\n    fullExpression,\n    compiledConfiguration,\n    start,\n    undefined,\n    comparisonSign,\n    \"\",\n    end,\n    undefined,\n    undefined\n  );\n};\n\nexport const checkTex = (\n  fullExpression,\n  start,\n  end,\n  comparisonSign,\n  rulePacks\n) => {\n  return twf_js.checkSolutionInTex(\n    fullExpression,\n    start,\n    undefined,\n    \"\",\n    end,\n    undefined,\n    comparisonSign,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    rulePacks,\n    undefined,\n    undefined,\n    undefined\n  );\n};\n\nexport const checkStatement = (fullExpression, rulePacks) => {\n  return {\n    res: twf_js.checkSolutionInTex(\n        fullExpression,\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        undefined,\n        \"\",\n        undefined,\n        undefined,\n        undefined,\n        \" \",\n        undefined,\n        rulePacks,\n        undefined,\n        undefined,\n        undefined\n    ),\n  };\n};\n\nexport const decodeUrlSymbols = (string) => {\n  return twf_js.decodeUrlSymbols(string);\n};\n","export const urlSignToPlainSign = (urlSign) => {\n  if (urlSign === \"ge\") {\n    return \">=\";\n  } else if (urlSign === \"le\") {\n    return \"<=\";\n  } else if (urlSign === \"gt\") {\n    return \">\";\n  } else if (urlSign === \"lt\") {\n    return \"<\";\n  } else return \"=\";\n};\n\nexport const plainSignToUrlSign = (plainSign) => {\n  switch (plainSign) {\n    case \">=\":\n      return \"ge\";\n    case \"<=\":\n      return \"le\";\n    case \">\":\n      return \"gt\";\n    case \"<\":\n      return \"lt\";\n    default:\n      return \"=\";\n  }\n};\n","export default __webpack_public_path__ + \"static/media/sum.3223816c.svg\";","export default __webpack_public_path__ + \"static/media/square-root.4b4aab98.svg\";","export default __webpack_public_path__ + \"static/media/pi.f4a71993.svg\";","// hooks and libs\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n// lib components\nimport { Alert, Button, Select, Tooltip } from \"antd\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { EditableMathField, StaticMathField } from \"react-mathquill\";\n// custom components\nimport GameEditor from \"../components/game-editor/game-editor\";\n// utils\nimport {\n  convertMathInput,\n  checkTex,\n  decodeUrlSymbols,\n  checkStatement,\n} from \"../utils/kotlin-lib-functions\";\nimport { addStyles } from \"react-mathquill\";\nimport { plainSignToUrlSign, urlSignToPlainSign } from \"./main-page.utils\";\n// icons\nimport sumIcon from \"../assets/math-symbols/sum.svg\";\nimport squareIcon from \"../assets/math-symbols/square-root.svg\";\nimport piIcon from \"../assets/math-symbols/pi.svg\";\n// styles\nimport \"./main-page.scss\";\n// inserts the required mathquill css to the <head> block.\naddStyles();\n\nlet alertCount = 0; //To avoid alert duplicates. TODO: make something normal\n\nconst MainPage = () => {\n  const { Option } = Select;\n  // getting url query params\n  const history = useHistory();\n  const possibleComparisonSigns = [\"=\", \">=\", \">\", \"<\", \"<=\"];\n  const {\n    mode: modeUrl,\n    originalExpression: originalExpressionUrl,\n    endExpression: endExpressionUrl,\n    rulePack: rulePackUrl,\n    hideDetails: hideDetailsUrl,\n    comparisonType: comparisonTypeUrl,\n  } = Object.fromEntries(\n    useLocation()\n      .search.slice(1)\n      .split(\"&\")\n      .map((queryStr) => {\n        return queryStr.split(\"=\");\n      })\n  );\n  const [selectedComparisonSign, setSelectedComparisonSign] = useState(\n    comparisonTypeUrl !== undefined\n      ? urlSignToPlainSign(comparisonTypeUrl)\n      : \"=\"\n  );\n  // local utils\n  const formSolutionStartingTex = () => {\n    let solutionSignView = selectedComparisonSign;\n    if (selectedComparisonSign === \">=\") {\n      solutionSignView = \" \\\\ge \";\n    } else if (selectedComparisonSign === \"<=\") {\n      solutionSignView = \" \\\\le \";\n    } else if (selectedComparisonSign === \"<\") {\n      solutionSignView = \" \\\\lt \";\n    } else if (selectedComparisonSign === \">\") {\n      solutionSignView = \" \\\\gt \";\n    }\n    return startTex + solutionSignView + \"...\" + solutionSignView + endTex;\n  };\n  const reverseGameMode = async () => {\n    await setCurrentMode(\"Solve\");\n    await setCurrentMode(\"Play\");\n  };\n  const createDefaultAndDisabledClassName = (className) => {\n    if (hideDetails) {\n      return `${className} ${className}--disabled`;\n    } else {\n      return className;\n    }\n  };\n\n  const checkExpressionUrl = (expressionUrl, type) => {\n    if (expressionUrl) {\n      try {\n        convertMathInput(\n          \"STRUCTURE_STRING\",\n          \"TEX\",\n          decodeUrlSymbols(expressionUrl)\n        );\n      } catch (e) {\n        if (alertCount === 0) {\n          alert(\n            \"Error in the \" +\n              type +\n              \" expressioin: '\" +\n              e.message +\n              \"'. Default value will be used\"\n          );\n          alertCount = alertCount + 1;\n        }\n        return false;\n      }\n      return true;\n    } else return false;\n  };\n  // static data\n  const defaultStart = checkExpressionUrl(originalExpressionUrl, \"start\")\n    ? decodeUrlSymbols(originalExpressionUrl)\n    : \"(and(a;or(a;b)))\";\n  const defaultEnd = checkExpressionUrl(endExpressionUrl, \"end\")\n    ? decodeUrlSymbols(endExpressionUrl)\n    : \"(a)\";\n  const rulePacks = [\n    \"Logic\",\n    \"ShortMultiplication\",\n    \"Logarithm\",\n    \"Trigonometry\",\n  ];\n  const modes = [\"Play\", \"Solve\", \"Check Statement\"];\n  // app dependencies\n  const [startSS, setStartSS] = useState(defaultStart);\n  const [endSS, setEndSS] = useState(defaultEnd);\n  const [currentRulePack, setCurrentRulePack] = useState(\n    rulePackUrl && rulePacks.includes(rulePackUrl) ? rulePackUrl : \"Logic\"\n  );\n  const hideDetails =\n    hideDetailsUrl !== undefined ? hideDetailsUrl === \"true\" : false;\n  const correctSolution =\n    startSS === \"(+(3;*(4;cos(*(2;x)));cos(*(4;x))))\" &&\n    endSS === \"(*(8;^(cos(x);4)))\" &&\n    currentRulePack === \"Trigonometry\" &&\n    selectedComparisonSign === \"=\"\n      ? \"3+4\\\\cdot \\\\cos \\\\left(2\\\\cdot x\\\\right)+\\\\cos \\\\left(4\\\\cdot x\\\\right)=3+4\\\\cdot \\\\left(2\\\\cdot \\\\cos ^2\\\\left(x\\\\right)-1\\\\right)+\\\\left(2\\\\cdot \\\\cos ^2\\\\left(2\\\\cdot x\\\\right)-1\\\\right)=3+4\\\\cdot \\\\left(2\\\\cdot \\\\cos ^2\\\\left(x\\\\right)-1\\\\right)+2\\\\cdot \\\\left(2\\\\cdot \\\\cos ^2\\\\left(x\\\\right)-1\\\\right)^2-1=8\\\\cdot \\\\cos \\\\left(x\\\\right)^4\"\n      : startSS === \"(+(2;*(4;cos(*(2;x)));cos(*(4;x))))\" &&\n        endSS === \"(*(8;^(cos(x);4)))\" &&\n        currentRulePack === \"Trigonometry\" &&\n        selectedComparisonSign === \"<=\"\n      ? \"2+4\\\\cdot \\\\cos \\\\left(2\\\\cdot x\\\\right)+\\\\cos \\\\left(4\\\\cdot x\\\\right)\\\\le 3+4\\\\cdot \\\\left(2\\\\cdot \\\\cos ^2\\\\left(x\\\\right)-1\\\\right)+\\\\left(2\\\\cdot \\\\cos ^2\\\\left(2\\\\cdot x\\\\right)-1\\\\right)\\\\le 3+4\\\\cdot \\\\left(2\\\\cdot \\\\cos ^2\\\\left(x\\\\right)-1\\\\right)+2\\\\cdot \\\\left(2\\\\cdot \\\\cos ^2\\\\left(x\\\\right)-1\\\\right)^2-1\\\\le 8\\\\cdot \\\\cos \\\\left(x\\\\right)^4\"\n      : null;\n  const [startTex, setStartTex] = useState(\n    convertMathInput(\"STRUCTURE_STRING\", \"TEX\", defaultStart)\n  );\n  const [endTex, setEndTex] = useState(\n    convertMathInput(\"STRUCTURE_STRING\", \"TEX\", defaultEnd)\n  );\n  const [currentMode, setCurrentMode] = useState(\n    modes.includes(modeUrl) ? modeUrl : \"Play\"\n  );\n  const [solutionInTex, setSolutionInTex] = useState(formSolutionStartingTex());\n  const [showSpinner, setShowSpinner] = useState(false);\n  // input check messages\n  const [startError, setStartError] = useState(null);\n  const [endError, setEndError] = useState(null);\n  const [solutionError, setSolutionError] = useState(null);\n  const [successMsg, setSuccessMsg] = useState(null);\n  // user actions\n  const onCreateTask = async () => {\n    // making local vars to have scope outside \"try catch\" block\n    let isError = false;\n    let startSSConverted;\n    let endSSConverted;\n    try {\n      startSSConverted = convertMathInput(\"TEX\", \"STRUCTURE_STRING\", startTex);\n      setStartSS(startSSConverted);\n    } catch (e) {\n      setStartError(e.message);\n      isError = true;\n    }\n    try {\n      endSSConverted = convertMathInput(\"TEX\", \"STRUCTURE_STRING\", endTex);\n      setEndSS(endSSConverted);\n    } catch (e) {\n      setEndError(e.message);\n      isError = true;\n    }\n    if (!isError) {\n      history.push(\n        `/?` +\n          `mode=${currentMode}` +\n          `&originalExpression=${startSSConverted}` +\n          `&endExpression=${endSSConverted}` +\n          `&rulePack=${currentRulePack}` +\n          `&hideDetails=${hideDetails}` +\n          (plainSignToUrlSign(selectedComparisonSign) !== \"=\"\n            ? `&comparisonType=${plainSignToUrlSign(selectedComparisonSign)}`\n            : \"\")\n      );\n      setStartError(null);\n      setEndError(null);\n      setSuccessMsg(null);\n      setSolutionError(null);\n      setSolutionInTex(formSolutionStartingTex());\n      if (currentMode === \"Play\") {\n        await reverseGameMode();\n      }\n    }\n  };\n\n  const onCheckTexSolutionInput = () => {\n    const res = checkTex(\n      solutionInTex,\n      startSS,\n      endSS,\n      selectedComparisonSign,\n      [currentRulePack]\n    );\n    if (res.errorMessage) {\n      setSuccessMsg(null);\n      setSolutionError(res.errorMessage);\n    } else {\n      setSolutionError(null);\n      setSuccessMsg(\"Congratulations! Correct solution!\");\n    }\n    setSolutionInTex(res.validatedSolution);\n  };\n\n  const onCheckStatement = () => {\n    const {\n      res,\n      // startExpression,\n      // endExpression,\n      // comparisonSign,\n      // TODO: add rulePacks\n    } = checkStatement(solutionInTex, []);\n    if (res.errorMessage) {\n      setSuccessMsg(null);\n      setSolutionError(res.errorMessage);\n    } else {\n      setSolutionError(null);\n      setSuccessMsg(\"Correct!\");\n    }\n    // setStartTex(startExpression);\n    // setEndTex(endExpression);\n    // setSelectedComparisonSign(urlSignToPlainSign(comparisonSign));\n    setSolutionInTex(res.validatedSolution);\n  };\n\n  useEffect(() => {\n    if (showSpinner && currentMode === \"Solve\") {\n      onCheckTexSolutionInput();\n    } else if (showSpinner && currentMode === \"Check Statement\") {\n      onCheckStatement();\n    }\n    setShowSpinner(false);\n  }, [showSpinner]);\n\n  // tex solution commands\n  const [solutionMathField, setSolutionMathField] = useState(null);\n  const actions = [\n    {\n      iconUrl: sumIcon,\n      latexCmd: () => {\n        if (solutionMathField) {\n          solutionMathField.cmd(\"\\\\sum\");\n        }\n      },\n    },\n    {\n      iconUrl: squareIcon,\n      latexCmd: () => {\n        if (solutionMathField) {\n          solutionMathField.cmd(\"\\\\sqrt\");\n        }\n      },\n    },\n    {\n      iconUrl: piIcon,\n      latexCmd: () => {\n        if (solutionMathField) {\n          solutionMathField.cmd(\"\\\\pi\");\n        }\n      },\n    },\n    // TODO: find icons and finish\n    // {\n    //   iconUrl: andIcon,\n    //   latexCmd: \"\\\\land\",\n    // },\n    // {\n    //   iconUrl: orIcon,\n    //   latexCmd: \"\\\\lor\",\n    // },\n    // {\n    //   iconUrl: oplusIcon,\n    //   latexCmd: \"\\\\oplus\",\n    // },\n    // {\n    //   iconUrl: negIcon,\n    //   latexCmd: \"\\\\neg\",\n    // },\n    // {\n    //   iconUrl: impliesIcon,\n    //   latexCmd: \"\\\\implies\",\n    // },\n    // {\n    //   iconUrl: setminusIcon,\n    //   latexCmd: \"\\\\setminus\",\n    // },\n  ];\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__tabs\">\n        {modes.map((mode) => {\n          return (\n            <div\n              key={mode}\n              onClick={() => {\n                setCurrentMode(mode);\n              }}\n              className={`app__tab ${\n                currentMode === mode ? \"app__tab--selected\" : \"\"\n              }`}\n            >\n              {mode}\n            </div>\n          );\n        })}\n        <div className=\"app__tab--bottom-line\" />\n      </div>\n      {currentMode !== \"Check Statement\" && (\n        <div className=\"app__inputs\">\n          <div className={createDefaultAndDisabledClassName(\"app__tex-inputs\")}>\n            <div\n              className={createDefaultAndDisabledClassName(\"app__tex-input\")}\n            >\n              <h2>Prove that</h2>\n              {!hideDetails ? (\n                <EditableMathField\n                  latex={startTex}\n                  onChange={(mathField) => {\n                    setStartTex(mathField.latex());\n                  }}\n                  style={{\n                    width: \"22rem\",\n                    fontSize: \"1.6rem\",\n                  }}\n                />\n              ) : (\n                <StaticMathField\n                  style={{\n                    fontSize: \"2.2rem\",\n                  }}\n                >\n                  {startTex}\n                </StaticMathField>\n              )}\n            </div>\n            <div\n              className={createDefaultAndDisabledClassName(\"app__tex-input\")}\n            >\n              {currentMode === \"Play\" ? (\n                <h2 style={{ marginRight: \"1rem\" }}>Equals</h2>\n              ) : (\n                <Select\n                  showSearch={true}\n                  defaultValue={selectedComparisonSign}\n                  onChange={(value) => {\n                    setSelectedComparisonSign(value);\n                  }}\n                  style={{\n                    width: \"7rem\",\n                    marginTop: \"-0.2rem\",\n                    marginRight: \"1rem\",\n                  }}\n                >\n                  {possibleComparisonSigns.map((sign) => (\n                    <Option key={sign} value={sign}>\n                      {sign}\n                    </Option>\n                  ))}\n                </Select>\n              )}\n              {!hideDetails ? (\n                <EditableMathField\n                  latex={endTex}\n                  onChange={(mathField) => {\n                    setEndTex(mathField.latex());\n                  }}\n                  style={{\n                    width: \"22rem\",\n                    fontSize: \"1.6rem\",\n                  }}\n                />\n              ) : (\n                <StaticMathField\n                  style={{\n                    fontSize: \"2.2rem\",\n                  }}\n                >\n                  {endTex}\n                </StaticMathField>\n              )}\n            </div>\n          </div>\n          {!hideDetails && (\n            <div className=\"app__add-inputs\">\n              <div className=\"app__input-group\">\n                <label>Subject Area</label>\n                <Select\n                  defaultValue={currentRulePack}\n                  onChange={(value) => {\n                    setCurrentRulePack(value);\n                  }}\n                  style={{ width: \"150px\" }}\n                >\n                  {rulePacks.map((option) => (\n                    <Option key={option} value={option}>\n                      {option}\n                    </Option>\n                  ))}\n                </Select>\n              </div>\n              <Button type=\"primary\" onClick={onCreateTask}>\n                Change Task!\n              </Button>\n            </div>\n          )}\n        </div>\n      )}\n      <div className=\"app__errors\">\n        {startError && (\n          <Alert\n            message={\"Error in start expression! \" + startError}\n            className=\"alert-msg\"\n            type=\"error\"\n          />\n        )}\n        {endError && (\n          <Alert\n            message={\"Error in target expression! \" + endError}\n            className=\"alert-msg\"\n            type=\"error\"\n          />\n        )}\n      </div>\n      {currentMode === \"Play\" && (\n        <GameEditor start={startSS} end={endSS} rulePacks={currentRulePack} />\n      )}\n      {currentMode !== \"Play\" && (\n        <div className=\"app__tex-solution-block\">\n          {currentMode === \"Solve\" && (\n            <h1>Write solution instead of dots (in TeX)</h1>\n          )}\n          {currentMode === \"Check Statement\" && (\n            <h1>Write statement and check if it's correct (in TeX)</h1>\n          )}\n          <div className=\"tex-solution\">\n            <div className=\"tex-solution__operations\">\n              {actions.map((action, i) => {\n                const { iconUrl, latexCmd, tooltip } = action;\n                return (\n                  <div key={i} className=\"tex-solution__operation\">\n                    {tooltip ? (\n                      <Tooltip title={tooltip} placement=\"bottom\">\n                        <img src={iconUrl} onClick={() => latexCmd()} />\n                      </Tooltip>\n                    ) : (\n                      <img src={iconUrl} onClick={() => latexCmd()} />\n                    )}\n                  </div>\n                );\n              })}\n            </div>\n            <EditableMathField\n              latex={solutionInTex}\n              mathquillDidMount={(mathField) => setSolutionMathField(mathField)}\n              onChange={(mathField) => {\n                setSolutionInTex(mathField.latex());\n              }}\n              style={{\n                minWidth: \"40rem\",\n                maxWidth: window.innerWidth - 100 + \"px\",\n                fontSize: \"2.2rem\",\n              }}\n            />\n          </div>\n          <ClipLoader loading={showSpinner} />\n          {(successMsg || solutionError) && (\n            <Alert\n              message={solutionError ? solutionError : successMsg}\n              className=\"alert-msg\"\n              type={solutionError ? \"error\" : \"success\"}\n              style={{ marginTop: \"1rem\" }}\n            />\n          )}\n          <div className=\"app__tex-solution-btns\">\n            <Button\n              onClick={() => {\n                // callback is provided in useEffect\n                setShowSpinner(true);\n              }}\n              style={{\n                marginTop: \"1rem\",\n              }}\n              type=\"primary\"\n            >\n              Check\n            </Button>\n            {correctSolution && (\n              <Button\n                onClick={() => {\n                  setSolutionInTex(correctSolution);\n                }}\n                style={{\n                  marginTop: \"10px\",\n                }}\n                type=\"success\"\n              >\n                Get correct solution\n              </Button>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MainPage;\n","import React from \"react\";\n\nimport MainPage from \"./pages/main-page\";\n\nimport \"./styles/App.scss\";\n\nfunction App() {\n  return <MainPage />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { Switch } from \"antd\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}